package edu.ecustcs123.zhh.walplay;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.database.Cursor;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.SeekBar;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
/**
 * Created by BenZ on 2015/12/8.
 * zhengbin0320@gmail.com
 */
public class PlayerActivity extends AppCompatActivity {
    //List Panel
    private ListView mMusicListView;//列表view
    private List<Mp3Info> mp3Infos;//保存mp3info的列表
    private SimpleAdapter mAdapter;//列表adapter

    //Control Panel
    private Button previousBtn;//上一首
    private Button nextBtn;//下一首
    private Button playBtn;//播放暂停
    private ImageButton modeIBtn;//播放方式
    private TextView titleTxtView;
    private SeekBar seekBar;

    //当前播放音乐相关信息
    private int listPosition = 0;   //记录当前播放在列表中的位置
    private String urlNow;          //当前播放的歌曲url
    private boolean isPlaying = false;
    private boolean isPause = false;
    private int currentTime;        //记录当前播放进度
    private int duration;           //音乐长度



    private PlayerReceiver playerReceiver;

    //-----ON CREATE-----
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_player);


        init();
        //initWidgetPointer();//FindViewById
        setOnClickListener();//添加监听器
        mMusicListView.setOnItemClickListener(new MusicItemOnClickListener());//注册click监听器，自定义实现listener
        mp3Infos = getMp3Infos();//从数据库获取歌曲列表
        setListAdapter(MusicListUtil.getMusicMaps(mp3Infos));//bind mp3 list

        //注册CmdReceiver
        playerReceiver = new PlayerReceiver();
        IntentFilter filter = new IntentFilter();
        filter.addAction(AppConstant.ACTION.CTL_ACTION);
        filter.addAction(AppConstant.ACTION.MODE_ACTION);
        filter.addAction(AppConstant.ACTION.UPDATE_ACTION);
        filter.addAction(AppConstant.ACTION.MUSIC_CURRENT);
        filter.addAction(AppConstant.ACTION.MUSIC_DURATION);
        registerReceiver(playerReceiver,filter);
    }

    private void init(){
        initWidgetPointer();
        seekBar.setMax(duration);


    }



    /**
     * Initializing with findViewById
     */
    private void initWidgetPointer(){
        //TODO:get more initialized
        titleTxtView = (TextView) findViewById(R.id.tv_titlePlayingMusic);
        mMusicListView = (ListView) findViewById(R.id.lv_musiclistview);
        previousBtn = (Button) findViewById(R.id.btn_playerPreviousPiece);
        nextBtn = (Button) findViewById(R.id.btn_playerNextPiece);
        playBtn = (Button) findViewById(R.id.btn_playerPlayMusic);
        seekBar = (SeekBar) findViewById(R.id.seekbar_player);
    }

    /**
     * 添加监听器
     */
    private  void setOnClickListener(){
        ViewOnClickListener viewOnClickListener = new ViewOnClickListener();
        previousBtn.setOnClickListener(viewOnClickListener);
        nextBtn.setOnClickListener(viewOnClickListener);
        playBtn.setOnClickListener(viewOnClickListener);
        seekBar.setOnSeekBarChangeListener(new SeekBarChangeListener());
    }

    /**
     * 按钮点击逻辑
     */
    private class ViewOnClickListener implements View.OnClickListener{
        Intent intent = new Intent();
        @Override
        public void onClick(View v) {
            switch (v.getId()){
                case R.id.btn_playerPreviousPiece://上一首
                    PreviousPiece();
                    break;
                case R.id.btn_playerNextPiece://下一首
                    NextPiece();
                    break;
                case R.id.btn_playerPlayMusic://播放|暂停
                    if(isPlaying) {
                        //暂停
                        isPlaying = false;
                        isPause = true;
                        intent.putExtra("MSG",AppConstant.PlayerMsg.PAUSE_MSG);
                        intent.setAction(AppConstant.ACTION.MUSIC_SERVICE);
                        startService(intent);
                    }else{
                        if(isPause){
                            //恢复播放
                            isPlaying = true;
                            isPause = false;
                            intent.putExtra("MSG",AppConstant.PlayerMsg.CONTINUE_MSG);
                            intent.setAction(AppConstant.ACTION.MUSIC_SERVICE);
                            startService(intent);

                        }else{
                            //首次播放
                            isPlaying = true;
                            isPause = false;
                            if(mp3Infos.size()<1){
                                //没有可播放的
                                isPause = false;
                                isPlaying = false;
                                Toast.makeText(PlayerActivity.this,"当前列表没有音乐可播放",Toast.LENGTH_SHORT).show();
                                return;
                            }
                            listPosition = 0;
                            StartPlaying();
                        }
                    }
                    break;
            }
        }
    }

    /**
     * Get clicked pos and Start the PlayerService to play the musicpiece
     */
    private class MusicItemOnClickListener implements AdapterView.OnItemClickListener{
        //TODO:不仅只是播放，还应有别的按钮，如何使item部分被点击
        @Override
        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
            //Mp3Info mp3Info = mp3Infos.get(position);
            listPosition = position;
            StartPlaying();
            Log.d("startPlaying-->", String.valueOf(position));
        }
    }

    private class SeekBarChangeListener implements SeekBar.OnSeekBarChangeListener{
        /**
         * 拖动进度条后对service的数据交互
         * @param seekBar
         * @param progress
         * @param fromUser
         */
        @Override
        public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
            if(fromUser){
                Intent intent = new Intent();
                intent.setAction(AppConstant.ACTION.MUSIC_SERVICE);
                intent.putExtra("url", urlNow);
                intent.putExtra("progress",progress);
                intent.putExtra("MSG",AppConstant.PlayerMsg.PROGRESS_CHANGE);
                Log.d(AppConstant.LOG.LOG_PROGRESSBAR_CHANGED, String.valueOf(progress));
                startService(intent);
            }
        }

        @Override
        public void onStartTrackingTouch(SeekBar seekBar) {

        }

        @Override
        public void onStopTrackingTouch(SeekBar seekBar) {

        }


    }

    /**
     * 从系统contentresolver数据库中获得歌曲信息，并保存在mp3Infors列表中
     * @return
     */
    public List<Mp3Info> getMp3Infos() {
        Cursor cursor = getContentResolver().query(
                MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, null, null, null,
                MediaStore.Audio.Media.DEFAULT_SORT_ORDER
        );
        List<Mp3Info> mp3Infos = new ArrayList<Mp3Info>();
        for (int i = 0; i < cursor.getCount(); i++) {
            Mp3Info mp3Info = new Mp3Info();
            cursor.moveToNext();
            long id = cursor.getLong(cursor.getColumnIndex((MediaStore.Audio.Media._ID)));
            String title = cursor.getString(cursor.getColumnIndex((MediaStore.Audio.Media.TITLE)));
            String artist = cursor.getString(cursor.getColumnIndex(MediaStore.Audio.Media.ARTIST));
            long duration = cursor.getLong(cursor.getColumnIndex(MediaStore.Audio.Media.DURATION));//时长
            long size = cursor.getLong(cursor.getColumnIndex(MediaStore.Audio.Media.SIZE));  //文件大小
            String url = cursor.getString(cursor.getColumnIndex(MediaStore.Audio.Media.DATA));
            int isMusic = cursor.getInt(cursor.getColumnIndex(MediaStore.Audio.Media.IS_MUSIC));
            if (isMusic != 0) {
                mp3Info.setId(id);
                mp3Info.setTitle(title);
                mp3Info.setArtist(artist);
                mp3Info.setDuration(duration);
                mp3Info.setSize(size);
                mp3Info.setUrl(url);
                mp3Infos.add(mp3Info);
            }
        }
        return mp3Infos;
    }

    public void setListAdapter(List<HashMap<String,Object>> list) {
        //TODO:ibtn会抢占焦点，先把btn去掉，以后再做决断
        mAdapter = new SimpleAdapter(this,list,R.layout.music_item,
                new String[] {"title","artist","duration"},
                new int[] {R.id.tv_itemMusicName,R.id.tv_itemMusicInfo,R.id.tv_itemMusicDuration}
        );
        mMusicListView.setAdapter(mAdapter);
    }

    /**
     * 播放下一首
     */
    public void NextPiece(){
        listPosition = listPosition + 1;
        if(listPosition < mp3Infos.size()){
            //还是通过startService(intent)来启动播放
            Mp3Info mp3Info = mp3Infos.get(listPosition);
            titleTxtView.setText(mp3Info.getTitle());//改标题
            Intent intent = new Intent();
            intent.putExtra("url",mp3Info.getUrl());
            intent.putExtra("MSG", AppConstant.PlayerMsg.PLAY_MSG);//这里好像应该换
            intent.setAction(AppConstant.ACTION.MUSIC_SERVICE);
            startService(intent);
        }else{
            Toast.makeText(PlayerActivity.this,"当前列表已没有下一首可播放",Toast.LENGTH_SHORT).show();
        }
    }

    /**
     * 播放上一首
     */
    public void PreviousPiece(){
        listPosition = listPosition - 1;
        if(listPosition>=0){
            Mp3Info mp3Info = mp3Infos.get(listPosition);
            titleTxtView.setText(mp3Info.getTitle());//改标题
            Intent intent = new Intent();
            intent.putExtra("url",mp3Info.getUrl());
            intent.putExtra("MSG", AppConstant.PlayerMsg.PLAY_MSG);//这里好像应该换
            intent.setAction(AppConstant.ACTION.MUSIC_SERVICE);
            startService(intent);
        }else{
            Toast.makeText(PlayerActivity.this, "当前列表已没有上一首可播放", Toast.LENGTH_SHORT).show();
        }
    }

    public void StartPlaying(){
        Mp3Info mp3Info = mp3Infos.get(listPosition);
        titleTxtView.setText(mp3Info.getTitle());
        urlNow = mp3Info.getUrl();
        Intent intent = new Intent();
        intent.putExtra("url",urlNow);
        intent.putExtra("MSG", AppConstant.PlayerMsg.PLAY_MSG);
        intent.setAction(AppConstant.ACTION.MUSIC_SERVICE);
        isPause = false;
        isPlaying = true;
        startService(intent);
    }


    /**
     * 接收从PlayerService传递回来的相关信息，如currentTime
     */
    public class PlayerReceiver extends BroadcastReceiver{
        @Override
        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();
            if(action.equals(AppConstant.ACTION.MODE_ACTION)){

            }else if(action.equals((AppConstant.ACTION.MUSIC_CURRENT))){
                currentTime = intent.getIntExtra("currentTime",-1);
                seekBar.setProgress(currentTime);
            }else if(action.equals(AppConstant.ACTION.MUSIC_DURATION)){
                duration = intent.getIntExtra("duration",-1);
                seekBar.setMax(duration);
            }

        }
    }


}
